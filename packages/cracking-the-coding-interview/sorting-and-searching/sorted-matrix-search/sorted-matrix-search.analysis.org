* Doc va phan tich yeu cau
Input: cho 1 ma tran m*n ma hang, va cot da duoc sap xep tang dan,
va 1 so tu nhien goi la target
Output: tim vi tri cua target trong matrix

V/d:
matrix: [
 [15, 20, 40, 85],
 [20, 35, 80, 95],
 [30, 55, 95, 105],
 [40, 80, 100, 120]
]

target = 80

Output: [1, 3] vi matrix[1][3] = 80

* Quan sat va dua ra nhan xet, y tuong de giai quyet bai toan
Ta nhan thay hang va cot da duoc sap xep tang dan va ta can tim kiem, ta se nghi
ngay den thuat toan Binary Search. Cau hoi la ap dung Binary Search cho matrix
se khac so voi cho array

* Naive Approach
Ta duyet tung dong cua matrix goi la row
Voi moi row ta thuc hien Binary Search trong row do de tim target
Do phuc tap O(n * log(m)) voi n la so dung, m la so cot

* Optimized Approach
Ta chua su dung den thuoc tinh cac cot dc sap xep.

Ta nhan thay
a[0][1] <= a[0][2] <= .. a[0][i] (do dong da duoc sap sep)
a[0][i] <= a[1][i] <= ...a[i][i] (do cot da duoc sap xep)

tuong tu vay:
a[0][m-1] >= a[0][m-2] >= a[0][i]
a[n-1][0] => a[n-2][0] >= a[i][0]

Voi tao do [i][i] ([1][1]) bat ky, ta co the chia matrix ra lam 4 phan:
- Phan tren ben trai P1: matrix[0][0] -> [1][1]
- Phan tren ben phai P2: matrix[0][2] -> [1][3]
- Phan duoi ben trai P3: matrix[2][0] -> [3][1]
- Phan duoi ben phai P4: matrix[2][2] -> [3][3]

Neu nhu ta ap dung Binary Search cho duong cheo cua matrix,
Gia su ta dang set a[1][1] = 35 va a[2][2] = 95
Do 35 < 80 < 95
Nen 80 se khong the xuat hien P1 (tat ca cac gia tri <= 35)
80 cung khong the xuat hien o P4 (tat ca cac gia tri >= 95)
Ta da loai duoc P1, P4 khoi danh sach tim kiem.

80 neu nhu co trong matrix chi co the nam trong P2 hoac P3 (hoc ca 2)

* Optimal Approach
Tu cac nhan xet tren ta suy ra cac buoc sau:

1. lap ham tim phan tu voi tham so:
findElements(matrix, start, end) {}
voi start la toa do cua diem ben trai (duong cheo)
end tao do diem ben phai (duong cheo)

2. Ham findElements thuc hien cac buoc sau:
Neu gia tri matrix tai diem start hoac end bang target,
  thi tra ve vi tri tuong ung

Lap lai voi start < end:
  lay diem middle co toa do la [(start.row + end.row) / 2, (start.col + end.col) / 2]
  lay them di voi toa do middle + 1: [middle.row + 1][middle.col + 1]

  neu nhu matrix[middle] > target => tim tiep trong P1: start => middle
  neu nhu matrix[middle+1] < target => tim tiep trong P4: middle+1 => end

  den day nghia la target phai o trong P2, P3;
  break;

Chia ma tran thanh 4 phan va tim tiep target trong P2, P3;
P2: [start.row+1, middle+1] -> [middle.row][end.col]
P3: [middle+1.row,start.col] -> [middle+1.row, middle.col]

* Dua ra loi gian toi uu sau khi so sanh cac loi giai

* TDD: Setup test case

* Bat dau code thuat toan thich hop nhat

* Test va fix bug neu co
